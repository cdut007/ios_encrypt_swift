{"Structs/SessionPreKey.html#/s:14SignalProtocol13SessionPreKeyV2ids6UInt32Vv":{"name":"id","abstract":"<p>The pre key id</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:14SignalProtocol13SessionPreKeyV7keyPairAA0eG0Vv":{"name":"keyPair","abstract":"<p>The key pair of the pre key</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:14SignalProtocol13SessionPreKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a pre key from serialized data</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:14SignalProtocol13SessionPreKeyV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the session pre key</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKeyBundle.html#/s:14SignalProtocol19SessionPreKeyBundleVACs6UInt32V14registrationId_s5Int32V06deviceI0AE03preeI010Foundation4DataV0lE0AE06signeddeI0AM0odE0AM9signatureAM08identityE0tcfc":{"name":"init(registrationId:deviceId:preKeyId:preKey:signedPreKeyId:signedPreKey:signature:identityKey:)","abstract":"<p>Create a pre key bundle from the components</p>","parent_name":"SessionPreKeyBundle"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV06publicC010Foundation4DataVv":{"name":"publicKey","abstract":"<p>The public key data</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV07privateC010Foundation4DataVv":{"name":"privateKey","abstract":"<p>The private key data</p>","parent_name":"KeyPair"},"Structs/CiphertextMessage/MessageType.html#/s:14SignalProtocol17CiphertextMessageV0D4TypeO6signalA2EmF":{"name":"signal","abstract":"<p>A signal message</p>","parent_name":"MessageType"},"Structs/CiphertextMessage/MessageType.html#/s:14SignalProtocol17CiphertextMessageV0D4TypeO6preKeyA2EmF":{"name":"preKey","abstract":"<p>A pre key signal message to establish a session</p>","parent_name":"MessageType"},"Structs/CiphertextMessage/MessageType.html#/s:14SignalProtocol17CiphertextMessageV0D4TypeO9senderKeyA2EmF":{"name":"senderKey","abstract":"<p>A sender key message</p>","parent_name":"MessageType"},"Structs/CiphertextMessage/MessageType.html#/s:14SignalProtocol17CiphertextMessageV0D4TypeO12distributionA2EmF":{"name":"distribution","abstract":"<p>A sender key distribution message to esatblish a group session</p>","parent_name":"MessageType"},"Structs/CiphertextMessage/MessageType.html#/s:14SignalProtocol17CiphertextMessageV0D4TypeO7unknownA2EmF":{"name":"unknown","abstract":"<p>Unknown message type</p>","parent_name":"MessageType"},"Structs/CiphertextMessage/MessageType.html":{"name":"MessageType","abstract":"<p>The message type of an encrypted message</p>","parent_name":"CiphertextMessage"},"Structs/CiphertextMessage.html#/s:14SignalProtocol17CiphertextMessageV4typeAC0D4TypeOv":{"name":"type","abstract":"<p>The type of the message</p>","parent_name":"CiphertextMessage"},"Structs/CiphertextMessage.html#/s:14SignalProtocol17CiphertextMessageV7message10Foundation4DataVv":{"name":"message","abstract":"<p>The message data</p>","parent_name":"CiphertextMessage"},"Structs/CiphertextMessage.html#/s:14SignalProtocol17CiphertextMessageVAC10Foundation4DataV4from_tcfc":{"name":"init(from:)","abstract":"<p>Create a message from serialized data.</p>","parent_name":"CiphertextMessage"},"Structs/CiphertextMessage.html#/s:14SignalProtocol17CiphertextMessageV4data10Foundation4DataVv":{"name":"data","abstract":"<p>Serialize the message by prepending the message type to the message data</p>","parent_name":"CiphertextMessage"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV2ids6UInt32Vv":{"name":"id","abstract":"<p>The id of the signed pre key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV9timestamps6UInt64Vv":{"name":"timestamp","abstract":"<p>The creation timestamp of the key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV9signature10Foundation4DataVv":{"name":"signature","abstract":"<p>The signature of the public key signed by the identity key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV7keyPairAA0fH0Vv":{"name":"keyPair","abstract":"<p>The key pair of the signed pre key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signed pre key from serialized data.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the session signed pre key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html":{"name":"SessionSignedPreKey","abstract":"<p>A signed pre key.</p>"},"Structs/CiphertextMessage.html":{"name":"CiphertextMessage","abstract":"<p>A <code>CiphertextMessage</code> is an encrypted message ready for delivery. It can be one"},"Structs/KeyPair.html":{"name":"KeyPair","abstract":"<p>A key pair consists of an elliptic curve public key and corresponding private key.</p>"},"Structs/SessionPreKeyBundle.html":{"name":"SessionPreKeyBundle","abstract":"<p>A session pre key bundle can be used to establish a new session.</p>"},"Structs/SessionPreKey.html":{"name":"SessionPreKey","abstract":"<p>A session pre key is uploaded to the server and"},"Protocols/SenderKeyStore.html#/s:14SignalProtocol14SenderKeyStoreP5storeSb10Foundation4DataV06senderD0_AA0acD4NameC3forAGSg10userRecordtF":{"name":"store(senderKey:for:userRecord:)","abstract":"<p>Store a serialized sender key record for a given","parent_name":"SenderKeyStore"},"Protocols/SenderKeyStore.html#/s:14SignalProtocol14SenderKeyStoreP04loadcD010Foundation4DataV06senderD0_AGSg10userRecordtSgAA0acD4NameC3for_tF":{"name":"loadSenderKey(for:)","abstract":"<p>Returns a copy of the sender key record corresponding to the","parent_name":"SenderKeyStore"},"Protocols/SenderKeyStore.html#/s:14SignalProtocol14SenderKeyStoreP7destroyyyF":{"name":"destroy()","abstract":"<p>Function called to perform cleanup when the data store context is being","parent_name":"SenderKeyStore"},"Protocols/SessionStore.html#/s:14SignalProtocol12SessionStoreP04loadC010Foundation4DataV7session_AGSg10userRecordtSgAA0A7AddressC3for_tF":{"name":"loadSession(for:)","abstract":"<p>Returns a copy of the serialized session record corresponding to the","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:14SignalProtocol12SessionStoreP17subDeviceSessionsSays5Int32VGSgSS3for_tF":{"name":"subDeviceSessions(for:)","abstract":"<p>Returns all known devices with active sessions for a recipient</p>","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:14SignalProtocol12SessionStoreP5storeSb10Foundation4DataV7session_AA0A7AddressC3forAGSg10userRecordtF":{"name":"store(session:for:userRecord:)","abstract":"<p>Commit to storage the session record for a given","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:14SignalProtocol12SessionStoreP08containsC0SbAA0A7AddressC3for_tF":{"name":"containsSession(for:)","abstract":"<p>Determine whether there is a committed session record for a","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:14SignalProtocol12SessionStoreP06deleteC0SbSgAA0A7AddressC3for_tF":{"name":"deleteSession(for:)","abstract":"<p>Remove a session record for a recipient ID + device ID tuple.</p>","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:14SignalProtocol12SessionStoreP17deleteAllSessionsSiSgSS3for_tF":{"name":"deleteAllSessions(for:)","abstract":"<p>Remove the session records corresponding to all devices of a recipient Id.</p>","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:14SignalProtocol12SessionStoreP7destroyyyF":{"name":"destroy()","abstract":"<p>Function called to perform cleanup when the data store context is being","parent_name":"SessionStore"},"Protocols/SignedPreKeyStore.html#/s:14SignalProtocol17SignedPreKeyStoreP4load10Foundation4DataVSgs6UInt32V06signeddE0_tF":{"name":"load(signedPreKey:)","abstract":"<p>Load a local serialized signed PreKey record.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:14SignalProtocol17SignedPreKeyStoreP5storeSb10Foundation4DataV06signeddE0_s6UInt32V3fortF":{"name":"store(signedPreKey:for:)","abstract":"<p>Store a local serialized signed PreKey record.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:14SignalProtocol17SignedPreKeyStoreP8containsSbs6UInt32V06signeddE0_tF":{"name":"contains(signedPreKey:)","abstract":"<p>Determine whether there is a committed signed PreKey record matching","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:14SignalProtocol17SignedPreKeyStoreP6removeSbs6UInt32V06signeddE0_tF":{"name":"remove(signedPreKey:)","abstract":"<p>Delete a SignedPreKeyRecord from local storage.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:14SignalProtocol17SignedPreKeyStoreP7destroyyyF":{"name":"destroy()","abstract":"<p>Function called to perform cleanup when the data store context is being","parent_name":"SignedPreKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStoreP08identityD4PairAA0dG0VSgyF":{"name":"identityKeyPair()","abstract":"<p>Get the local client&rsquo;s identity key pair.</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStoreP19localRegistrationIds6UInt32VSgyF":{"name":"localRegistrationId()","abstract":"<p>Return the local client&rsquo;s registration ID.</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStoreP4saveSb10Foundation4DataVSg8identity_AA0A7AddressC3fortF":{"name":"save(identity:for:)","abstract":"<p>Save a remote client&rsquo;s identity key</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStoreP9isTrustedSbSg10Foundation4DataV8identity_AA0A7AddressC3fortF":{"name":"isTrusted(identity:for:)","abstract":"<p>Verify a remote client&rsquo;s identity key.</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStoreP7destroyyyF":{"name":"destroy()","abstract":"<p>Function called to perform cleanup when the data store context is being","parent_name":"IdentityKeyStore"},"Protocols/PreKeyStore.html#/s:14SignalProtocol11PreKeyStoreP4load10Foundation4DataVSgs6UInt32V03preD0_tF":{"name":"load(preKey:)","abstract":"<p>Load a local serialized PreKey record.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:14SignalProtocol11PreKeyStoreP5storeSb10Foundation4DataV03preD0_s6UInt32V3fortF":{"name":"store(preKey:for:)","abstract":"<p>Store a local serialized PreKey record.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:14SignalProtocol11PreKeyStoreP8containsSbs6UInt32V03preD0_tF":{"name":"contains(preKey:)","abstract":"<p>Determine whether there is a committed PreKey record matching the","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:14SignalProtocol11PreKeyStoreP6removeSbs6UInt32V03preD0_tF":{"name":"remove(preKey:)","abstract":"<p>Delete a PreKey record from local storage.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:14SignalProtocol11PreKeyStoreP7destroyyyF":{"name":"destroy()","abstract":"<p>Function called to perform cleanup when the data store context is being","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html":{"name":"PreKeyStore","abstract":"<p>The <code>PreKeyStore</code>protocol must be adopted to provide the storage for pre keys.</p>"},"Protocols/IdentityKeyStore.html":{"name":"IdentityKeyStore","abstract":"<p>The <code>IdentityKeyStore</code>protocol must be adopted to provide the storage for identity keys.</p>"},"Protocols/SignedPreKeyStore.html":{"name":"SignedPreKeyStore","abstract":"<p>The <code>SignedPreKeyStore</code>protocol must be adopted to provide the storage for signed pre keys.</p>"},"Protocols/SessionStore.html":{"name":"SessionStore","abstract":"<p>The <code>SessionStore</code>protocol must be adopted to provide the storage for sessions.</p>"},"Protocols/SenderKeyStore.html":{"name":"SenderKeyStore","abstract":"<p>The <code>SenderKeyStore</code>protocol must be adopted to provide the storage for sender keys.</p>"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO8noMemoryA2CmF":{"name":"noMemory","abstract":"<p>Allocation of memory failed</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO15invalidArgumentA2CmF":{"name":"invalidArgument","abstract":"<p>An argument to the function was invalid/missing</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO07unknownC0A2CmF":{"name":"unknownError","abstract":"<p>Unspecified error</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO16duplicateMessageA2CmF":{"name":"duplicateMessage","abstract":"<p>The message has already been received</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO10invalidKeyA2CmF":{"name":"invalidKey","abstract":"<p>The key is invalid</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO12invalidKeyIdA2CmF":{"name":"invalidKeyId","abstract":"<p>The key id is invalid</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO10invalidMacA2CmF":{"name":"invalidMac","abstract":"<p>The MAC of a message is invalid</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO14invalidMessageA2CmF":{"name":"invalidMessage","abstract":"<p>The message is malformed or corrupt</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO14invalidVersionA2CmF":{"name":"invalidVersion","abstract":"<p>The version does not match</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO13legacyMessageA2CmF":{"name":"legacyMessage","abstract":"<p>The message version is no longer supported</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO9noSessionA2CmF":{"name":"noSession","abstract":"<p>There is no session saved</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO17untrustedIdentityA2CmF":{"name":"untrustedIdentity","abstract":"<p>The identity of the sender is untrusted</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO19incalidVrfSignatureA2CmF":{"name":"incalidVrfSignature","abstract":"<p>The VRF signature is invalid</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO15invalidProtoBufA2CmF":{"name":"invalidProtoBuf","abstract":"<p>The (de)serialization failed</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO17fpVersionMismatchA2CmF":{"name":"fpVersionMismatch","abstract":"<p>The fingerprint versions don&rsquo;t match</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO18fpIdentityMismatchA2CmF":{"name":"fpIdentityMismatch","abstract":"<p>The identities of the fingerprints don&rsquo;t match</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO10noDelegateA2CmF":{"name":"noDelegate","abstract":"<p>There is no delegate registered</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO6noDataA2CmF":{"name":"noData","abstract":"<p>No identity key or registration id in the identity key store</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO02noA7AddressA2CmF":{"name":"noSignalAddress","abstract":"<p>A Swift SignalAddress could not be created</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO13notSuccessfulA2CmF":{"name":"notSuccessful","abstract":"<p>Retrieving data from a key store failed</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorO15isTrustedFailedA2CmF":{"name":"isTrustedFailed","abstract":"<p>An identity key could not be checked</p>","parent_name":"SignalError"},"Enums/SignalError.html#/s:14SignalProtocol0A5ErrorOACs5Int32V5value_tcfc":{"name":"init(value:)","abstract":"<p>Create a SignalError from a <code>libsignal-protocol-c</code> result.</p>","parent_name":"SignalError"},"Enums/SignalError.html":{"name":"SignalError","abstract":"<p>Errors thrown by the framework.</p>"},"Classes/SignalAddress.html#/s:14SignalProtocol0A7AddressC4nameSSv":{"name":"name","abstract":"<p>The name or identifier of the user</p>","parent_name":"SignalAddress"},"Classes/SignalAddress.html#/s:14SignalProtocol0A7AddressC8deviceIds5Int32Vv":{"name":"deviceId","abstract":"<p>The id of the user&rsquo;s device</p>","parent_name":"SignalAddress"},"Classes/SignalAddress.html#/s:14SignalProtocol0A7AddressCACSS4name_s5Int32V8deviceIdtcfc":{"name":"init(name:deviceId:)","abstract":"<p>Create a signal address.</p>","parent_name":"SignalAddress"},"Classes/SignalAddress.html#/s:14SignalProtocol0A7AddressC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two signal addresses for equality</p>","parent_name":"SignalAddress"},"Classes/SignalAddress.html#/s:14SignalProtocol0A7AddressC9hashValueSiv":{"name":"hashValue","abstract":"<p>A hash of the address</p>","parent_name":"SignalAddress"},"Classes/GroupSessionBuilder.html#/s:14SignalProtocol19GroupSessionBuilderCAcA0A5StoreC2in_tcfc":{"name":"init(in:)","abstract":"<p>Constructs a group session builder.</p>","parent_name":"GroupSessionBuilder"},"Classes/GroupSessionBuilder.html#/s:14SignalProtocol19GroupSessionBuilderC7processyAA17CiphertextMessageV021senderKeyDistributionH0_AA0a6SenderJ4NameC4fromtKF":{"name":"process(senderKeyDistributionMessage:from:)","abstract":"<p>Construct a group session for receiving messages from senderKeyName.</p>","parent_name":"GroupSessionBuilder"},"Classes/GroupSessionBuilder.html#/s:14SignalProtocol19GroupSessionBuilderC7processy10Foundation4DataV28senderKeyDistributionMessage_AA0a6SenderJ4NameC4fromtKF":{"name":"process(senderKeyDistributionMessage:from:)","abstract":"<p>Construct a group session for receiving messages from senderKeyName.</p>","parent_name":"GroupSessionBuilder"},"Classes/GroupSessionBuilder.html#/s:14SignalProtocol19GroupSessionBuilderC06createD0AA17CiphertextMessageVAA0A13SenderKeyNameC3for_tKF":{"name":"createSession(for:)","abstract":"<p>Construct a group session for sending messages.</p>","parent_name":"GroupSessionBuilder"},"Classes/SessionCipher.html#/s:14SignalProtocol13SessionCipherCAcA0A7AddressC3for_AA0A5StoreC2intcfc":{"name":"init(for:in:)","abstract":"<p>Construct a session cipher for encrypt/decrypt operations on a session.","parent_name":"SessionCipher"},"Classes/SessionCipher.html#/s:14SignalProtocol13SessionCipherC7encryptAA17CiphertextMessageV10Foundation4DataVKF":{"name":"encrypt(_:)","abstract":"<p>Encrypt a message.</p>","parent_name":"SessionCipher"},"Classes/SessionCipher.html#/s:14SignalProtocol13SessionCipherC7decrypt10Foundation4DataVAG4data_tKF":{"name":"decrypt(data:)","abstract":"<p>Decrypt a message from a serialized ciphertext message.</p>","parent_name":"SessionCipher"},"Classes/SessionCipher.html#/s:14SignalProtocol13SessionCipherC7decrypt10Foundation4DataVAA17CiphertextMessageV7message_tKF":{"name":"decrypt(message:)","abstract":"<p>Decrypt a message from a ciphertext message.</p>","parent_name":"SessionCipher"},"Classes/SessionCipher.html#/s:14SignalProtocol13SessionCipherC7decrypt10Foundation4DataVAG06preKeyA7Message_tKF":{"name":"decrypt(preKeySignalMessage:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Classes/SessionCipher.html#/s:14SignalProtocol13SessionCipherC7decrypt10Foundation4DataVAG13signalMessage_tKF":{"name":"decrypt(signalMessage:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Classes/SessionBuilder.html#/s:14SignalProtocol14SessionBuilderCAcA0A7AddressC3for_AA0A5StoreC2intcfc":{"name":"init(for:in:)","abstract":"<p>Constructs a session builder.</p>","parent_name":"SessionBuilder"},"Classes/SessionBuilder.html#/s:14SignalProtocol14SessionBuilderC7processyAA0C12PreKeyBundleV03pregH0_tKF":{"name":"process(preKeyBundle:)","abstract":"<p>Build a new session from a session_pre_key_bundle retrieved from a server.</p>","parent_name":"SessionBuilder"},"Classes/SignalSenderKeyName.html#/s:14SignalProtocol0A13SenderKeyNameC7groupIdSSv":{"name":"groupId","abstract":"<p>The group identifier</p>","parent_name":"SignalSenderKeyName"},"Classes/SignalSenderKeyName.html#/s:14SignalProtocol0A13SenderKeyNameC6senderAA0A7AddressCv":{"name":"sender","abstract":"<p>The sender/recipient</p>","parent_name":"SignalSenderKeyName"},"Classes/SignalSenderKeyName.html#/s:14SignalProtocol0A13SenderKeyNameCACSS7groupId_AA0A7AddressC6sendertcfc":{"name":"init(groupId:sender:)","abstract":"<p>Create a sender key name.</p>","parent_name":"SignalSenderKeyName"},"Classes/SignalSenderKeyName.html#/s:14SignalProtocol0A13SenderKeyNameC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two sender key names for equality</p>","parent_name":"SignalSenderKeyName"},"Classes/SignalSenderKeyName.html#/s:14SignalProtocol0A13SenderKeyNameC9hashValueSiv":{"name":"hashValue","abstract":"<p>The hash of the sender key name</p>","parent_name":"SignalSenderKeyName"},"Classes/SignalStore.html#/s:14SignalProtocol0A5StoreC011identityKeyC0AA08IdentityeC0_pv":{"name":"identityKeyStore","abstract":"<p>The delegate that handles the identity key store operations</p>","parent_name":"SignalStore"},"Classes/SignalStore.html#/s:14SignalProtocol0A5StoreC06preKeyC0AA03PreeC0_pv":{"name":"preKeyStore","abstract":"<p>The delegate that handles the pre key store operations</p>","parent_name":"SignalStore"},"Classes/SignalStore.html#/s:14SignalProtocol0A5StoreC07sessionC0AA07SessionC0_pv":{"name":"sessionStore","abstract":"<p>The delegate that handles the session store operations</p>","parent_name":"SignalStore"},"Classes/SignalStore.html#/s:14SignalProtocol0A5StoreC012signedPreKeyC0AA06SignedefC0_pv":{"name":"signedPreKeyStore","abstract":"<p>The delegate that handles the signed pre key store operations</p>","parent_name":"SignalStore"},"Classes/SignalStore.html#/s:14SignalProtocol0A5StoreC09senderKeyC0AA06SendereC0_pSgv":{"name":"senderKeyStore","abstract":"<p>The delegate that handles the sender key store operations, optional</p>","parent_name":"SignalStore"},"Classes/SignalStore.html#/s:14SignalProtocol0A5StoreCAcA011IdentityKeyC0_p08identityeC0_AA03PreeC0_p03preeC0AA07SessionC0_p07sessionC0AA06SignedgeC0_p06signedgeC0AA06SendereC0_pSg06sendereC0tKcfc":{"name":"init(identityKeyStore:preKeyStore:sessionStore:signedPreKeyStore:senderKeyStore:)","abstract":"<p>Create a <code>SignalStore</code> with the necessary delegates.</p>","parent_name":"SignalStore"},"Classes/Signal.html#/s:14SignalProtocol0A0C23generateIdentityKeyPairAA0eF0VyKFZ":{"name":"generateIdentityKeyPair()","abstract":"<p>Generate an identity key pair.  Clients should only do this once,","parent_name":"Signal"},"Classes/Signal.html#/s:14SignalProtocol0A0C22generateRegistrationIds6UInt32VSb13extendedRange_tKFZ":{"name":"generateRegistrationId(extendedRange:)","abstract":"<p>Generate a registration ID.  Clients should only do this once,","parent_name":"Signal"},"Classes/Signal.html#/s:14SignalProtocol0A0C15generatePreKeysSayAA07SessionD3KeyVGs6UInt32V5start_Si5counttKFZ":{"name":"generatePreKeys(start:count:)","abstract":"<p>Generate a list of PreKeys.  Clients should do this at install time, and","parent_name":"Signal"},"Classes/Signal.html#/s:14SignalProtocol0A0C8generateAA19SessionSignedPreKeyVs6UInt32V06signedfG0_AA0G4PairV8identitys6UInt64V9timestamptKFZ":{"name":"generate(signedPreKey:identity:timestamp:)","abstract":"<p>Generate a signed pre key</p>","parent_name":"Signal"},"Classes/Fingerprint.html#/s:14SignalProtocol11FingerprintC11displayableSSv":{"name":"displayable","abstract":"<p>A displayable string of numbers to compare fingerprints visually</p>","parent_name":"Fingerprint"},"Classes/Fingerprint.html#/s:14SignalProtocol11FingerprintC9scannable10Foundation4DataVv":{"name":"scannable","abstract":"<p>Data that can be transmitted to another device</p>","parent_name":"Fingerprint"},"Classes/Fingerprint.html#/s:14SignalProtocol11FingerprintCACSi10iterations_SS15localIdentifier10Foundation4DataV0E8IdentitySS06remoteF0AH0jI0tKcfc":{"name":"init(iterations:localIdentifier:localIdentity:remoteIdentifier:remoteIdentity:)","abstract":"<p>Construct a fingerprint (Version 0) generator for 60 digit numerics.</p>","parent_name":"Fingerprint"},"Classes/Fingerprint.html#/s:14SignalProtocol11FingerprintCACSi10iterations_10Foundation4DataV13localIdentityAG06remoteH0tKcfc":{"name":"init(iterations:localIdentity:remoteIdentity:)","abstract":"<p>Construct a fingerprint (Version 1) generator for 60 digit numerics.</p>","parent_name":"Fingerprint"},"Classes/Fingerprint.html#/s:14SignalProtocol11FingerprintCACSi10iterations_SS15localIdentifierSay10Foundation4DataVG0E12IdentityListSS06remoteF0AI0kiJ0tKcfc":{"name":"init(iterations:localIdentifier:localIdentityList:remoteIdentifier:remoteIdentityList:)","abstract":"<p>Generate a scannable and displayble fingerprint (Version 0) for a list of keys.</p>","parent_name":"Fingerprint"},"Classes/Fingerprint.html#/s:14SignalProtocol11FingerprintCACSi10iterations_Say10Foundation4DataVG17localIdentityListAH06remotehI0tKcfc":{"name":"init(iterations:localIdentityList:remoteIdentityList:)","abstract":"<p>Generate a scannable and displayble fingerprint (Version 1) for a list of keys.</p>","parent_name":"Fingerprint"},"Classes/Fingerprint.html#/s:14SignalProtocol11FingerprintC7matchesSb10Foundation4DataV9scannable_tKF":{"name":"matches(scannable:)","abstract":"<p>Match a received/scanned fingerprint.</p>","parent_name":"Fingerprint"},"Classes/Fingerprint.html#/s:14SignalProtocol11FingerprintC7matchesSbAC9scannable_tKF":{"name":"matches(scannable:)","abstract":"<p>Match a received/scanned fingerprint.</p>","parent_name":"Fingerprint"},"Classes/GroupCipher.html#/s:14SignalProtocol11GroupCipherCAcA0A13SenderKeyNameC3for_AA0A5StoreC2intcfc":{"name":"init(for:in:)","abstract":"<p>Construct a group cipher for encrypt/decrypt operations.</p>","parent_name":"GroupCipher"},"Classes/GroupCipher.html#/s:14SignalProtocol11GroupCipherC7encryptAA17CiphertextMessageV10Foundation4DataVKF":{"name":"encrypt(_:)","abstract":"<p>Encrypt a message.</p>","parent_name":"GroupCipher"},"Classes/GroupCipher.html#/s:14SignalProtocol11GroupCipherC7decrypt10Foundation4DataVAA17CiphertextMessageVKF":{"name":"decrypt(_:)","abstract":"<p>Decrypt a message.</p>","parent_name":"GroupCipher"},"Classes/GroupCipher.html#/s:14SignalProtocol11GroupCipherC7decrypt10Foundation4DataVAGKF":{"name":"decrypt(_:)","abstract":"<p>Decrypt a message.</p>","parent_name":"GroupCipher"},"Classes/GroupCipher.html":{"name":"GroupCipher","abstract":"<p>The main entry point for Signal Protocol group encrypt/decrypt operations.</p>"},"Classes/Fingerprint.html":{"name":"Fingerprint","abstract":"<p>Fingerprints can be used to compare identity keys across devices."},"Classes/Signal.html":{"name":"Signal","abstract":"<p>Main entry point for initialization of a client.</p>"},"Classes/SignalStore.html":{"name":"SignalStore","abstract":"<p>A <code>SignalStore</code> provides access to all required data stores for a client.</p>"},"Classes/SignalSenderKeyName.html":{"name":"SignalSenderKeyName","abstract":"<p>The identifier of a party in a group conversation setting.</p>"},"Classes/SessionBuilder.html":{"name":"SessionBuilder","abstract":"<p>Session builder is responsible for setting up encrypted sessions."},"Classes/SessionCipher.html":{"name":"SessionCipher","abstract":"<p>The main entry point for Signal Protocol encrypt/decrypt operations.</p>"},"Classes/GroupSessionBuilder.html":{"name":"GroupSessionBuilder","abstract":"<p>Group session builder is responsible for setting up"},"Classes/SignalAddress.html":{"name":"SignalAddress","abstract":"<p>A SignalAddress identifies the device of a user.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enums","abstract":"<p>The following enums are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"}}